name: Super AI Project & Android Bot

on:
  issues:
    types: [opened, edited]

jobs:
  ai-bot:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python & Tools
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: python -m pip install --upgrade pip openai

      - name: Write AI Bot script
        run: |
          cat << 'EOF' > super_ai_bot.py
          import os, openai, re, shutil
          from datetime import datetime

          try:
              openai.api_key = os.environ["OPENAI_API_KEY"]
              issue_title = """${{ github.event.issue.title }}"""
              issue_body = """${{ github.event.issue.body }}"""
              user_input = issue_title + "\n" + issue_body
              GH_USER = os.environ.get("GH_USER", "")
              GH_OWNER = os.environ.get("GH_OWNER", "")

              SYSTEM_PROMPT = '''
              أنت سوبر بوت للبرمجة وإدارة المشاريع على GitHub
              - افهم أي أوامر (عربي/إنجليزي/عامية/مختلطة)، ولو الأمر غير واضح اسأل المستخدم وحدد المطلوب.
              - نفذ أوامر مثل: "ابني لي تطبيق أندرويد فيه شات وفيديو وصلاحيات وقاعدة بيانات"، "أضف لي مشروع ويب كامل"، "احذف كل ملفات الصور"، "حلل الكود وأصلح كل المشاكل"، "ولّد اختبارات تغطي كل شيء"، "اعمل لي README وDocs كاملة"، "رجع كل حاجة زي الأسبوع اللي فات"، "ارفع التطبيق على Play Store"، "قفل ملفات معينة"، إلخ.
              - لو أمر فيه حذف جماعي/تعديل خطير، وضّح للمستخدم وخذ تأكيد قبل التنفيذ.
              - أي مشروع تولده يكون كامل، منظم، فيه كل الملفات (build, manifest, resources, main code, tests, docs).
              - دعم توليد مشاريع أندرويد ضخمة (Kotlin/Java/Flutter/React Native)، مع كل ملفاتها وملفات البناء والتوثيق.
              - دعم توليد مشاريع بأي لغة أو تقنية أو معمارية (monorepo, microservices, plugins, إلخ).
              - نفذ تحليل أمان وكود لأي أمر قبل التنفيذ، ولو فيه خطأ أو خطر اشرح السبب واقترح حلول.
              - نفذ أوامر Undo/Redo/History، واحتفظ بنسخ احتياطية تلقائية.
              - لو طلب المستخدم شرح أو تلخيص أو مقارنة أو تحليل، رد عليه بتفصيل وذكاء.
              - لو طلب منه ينفذ أمر على كل المشروع أو مجلد كامل (bulk)، نفذها بأمان وكفاءة.
              - لو طلب نشر أو رفع المشروع على أي منصة، وضّح الخطوات أو نفّذ ما يمكن تلقائيًا.
              - إذا كان هناك ملف يجب توليده، أرسله بـ:
              ```file
              name=اسم_الملف
              محتوى_الملف
              ```
              - لو فيه عدة ملفات، كل ملف في block منفصل.
              - لو طلب مثال أو اختبار أو وثيقة أو شرح، أضفهم بنفس الشكل.
              - لو الأمر غير منطقي أو خطير أو ناقص بيانات، أوقف التنفيذ واطلب من المستخدم توضيح أو تأكيد.
              - بعد كل عملية، وضّح بالضبط ما تم وما هي الخطوات القادمة، ولو فيه مشاكل أو تحذيرات اذكرها.
              '''

              resp = openai.chat.completions.create(
                  model="gpt-4o",
                  messages=[
                      {"role": "system", "content": SYSTEM_PROMPT},
                      {"role": "user", "content": user_input}
                  ],
                  max_tokens=4096,
                  temperature=0.1
              )
              answer = resp.choices[0].message.content.strip()

              files = re.findall(r"```file\s+name=([^\n]+)\n(.*?)```", answer, re.DOTALL)
              os.makedirs(".github/bot_backups", exist_ok=True)
              log = []

              for fname, content in files:
                  if os.path.exists(fname):
                      ts = datetime.now().strftime('%Y%m%d%H%M%S')
                      bak = f".github/bot_backups/{fname.replace('/','_')}.{ts}.bak"
                      os.makedirs(os.path.dirname(bak), exist_ok=True)
                      shutil.copy2(fname, bak)
                      log.append(f"نسخة احتياطية: {bak}")
                  os.makedirs(os.path.dirname(fname), exist_ok=True)
                  with open(fname, "w", encoding="utf-8") as f:
                      f.write(content)
                  log.append(f"تم إنشاء/تعديل: {fname}")

              errors = []
              if "خطأ" in answer or "error" in answer.lower():
                  errors.append("⚠️ قد يكون هناك أخطاء أو مشاكل في جزء من الكود. راجع التفاصيل في الأعلى.")

              with open("results.log", "w", encoding="utf-8") as out:
                  out.write("**رد الذكاء الاصطناعي:**\n\n")
                  out.write(answer + "\n\n")
                  if log:
                      out.write("**سجل العمليات:**\n")
                      out.write("\n".join(log) + "\n\n")
                  if errors:
                      out.write("**تحذيرات:**\n")
                      out.write("\n".join(errors))
          except Exception as e:
              with open("results.log", "w", encoding="utf-8") as out:
                  out.write(f"حدث خطأ أثناء تنفيذ سكريبت البوت:\n{str(e)}\n")
          EOF

      - name: Run Super AI Bot script
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GH_USER: ${{ github.event.issue.user.login }}
          GH_OWNER: ${{ github.repository_owner }}
        run: python super_ai_bot.py

      - name: Ensure results.log exists
        run: |
          if [ ! -f results.log ]; then echo "لم يتم توليد نتائج." > results.log; fi

      - name: Commit and Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --staged --quiet || (git commit -m "Super AI Bot: auto changes")
          git pull origin ${{ github.ref_name }} --rebase || true
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} HEAD:${{ github.ref_name }} || echo "No changes to push"

      - name: Add comment to issue
        if: always()
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body-path: results.log
