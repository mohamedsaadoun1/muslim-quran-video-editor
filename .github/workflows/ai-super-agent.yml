---
name: AI Super Agent

on:
  issue_comment:
    types: [created]

jobs:
  ai-super-agent:
    runs-on: ubuntu-latest
    if: >
      github.event.issue.title == 'AI Super Agent' || github.event.issue.title == 'وكيل الذكاء الكامل'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pip install "open-interpreter[all]" huggingface-hub
          npm install -g @mermaid-js/mermaid-cli

      - name: Prepare prompt
        id: prompt
        run: |
          COMMENT="${{ github.event.comment.body }}"
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Discover available models in token
        id: models
        env:
          HF_API_KEY: ${{ secrets.HF_API_KEY }}
        run: |
          python3 << 'EOF'
          import requests, os, json
          headers = {"Authorization": f"Bearer {os.environ['HF_API_KEY']}"}
          response = requests.get("https://huggingface.co/api/authorized", headers=headers)
          my_user = response.json().get("user", {}).get("name", "")
          list_resp = requests.get("https://huggingface.co/api/models?full=true", headers=headers)
          models = []
          for m in list_resp.json():
              if (
                (m.get("private") or my_user in m.get("id", "")) and
                m.get("pipeline_tag") in (
                  "text-generation", "text2text-generation", "conversational", "chat", "code", "text"
                )
              ):
                  models.append(m["id"])
          if not models:
              models = [
                  "meta-llama/Meta-Llama-3-70B-Instruct",
                  "Qwen/Qwen1.5-72B-Chat",
                  "deepseek-ai/deepseek-coder-33b-instruct",
                  "google/gemma-7b-it",
                  "microsoft/Phi-3-mini-4k-instruct"
              ]
          with open("models.txt", "w") as f:
              [f.write(m + "\n") for m in models[:8]]
          EOF

      - name: Read all project files and structure
        id: readproject
        run: |
          find . -type f ! -path "./.git/*" ! -path "./.github/*" ! -name "*.png" ! -name "*.jpg" ! -name "*.jpeg" -exec sh -c 'echo "===== {} ====="; cat "{}"; echo "";' \; > all_project_files.txt
          tree -a -I '.git|.github' > project_tree.txt

      - name: Run smart agent prompt (with full context)
        env:
          HF_API_KEY: ${{ secrets.HF_API_KEY }}
        run: |
          PROMPT="${{ steps.prompt.outputs.prompt }}"
          TREE="$(cat project_tree.txt)"
          ALLFILES="$(head -c 50000 all_project_files.txt)"
          AI_PROMPT="انت وكيل ذكي على مشروع برمجي كامل. هيكل المشروع:\n$TREE\n\nملفات المشروع (مختصر):\n$ALLFILES\n\nالأمر أو الطلب:\n$PROMPT\n\nملاحظة: يمكنك حذف أو تعديل أو إعادة أي ملف أو إنشاء ملفات أو مشاريع جديدة بالكامل، ويمكنك الرجوع عن أي حذف إذا طلب منك ذلك، وكل تغيير يتم عبر commit منفصل ليسهل الرجوع. إذا طلب المستخدم استرجاع شيء احذفته سابقًا، استرجع أحدث نسخة منه من git. كل أمر تنفذه اكتب معه شرح مختصر جدًا لما تم فعله."

          echo "$AI_PROMPT" > ai_super_prompt.txt

          echo "" > ai_super_responses.md
          while read MODEL; do
              echo -e "\n\n## [$MODEL]" >> ai_super_responses.md
              interpreter --model "$MODEL" --hf --hf-token $HF_API_KEY --no-stream --no-tty --text "$(cat ai_super_prompt.txt)" >> ai_super_responses.md || echo "فشل في النموذج $MODEL" >> ai_super_responses.md
          done < models.txt

      - name: Apply AI Proposed Changes (if any)
        run: |
          grep -E '^(git |echo |rm |mv |cp |mkdir |cat |touch )' ai_super_responses.md > ai_commands.sh || true
          if [ -s ai_commands.sh ]; then
            bash ai_commands.sh || true
          fi

      - name: Commit and push all changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add . || true
          git commit -am "AI Super Agent: تنفيذ أوامر المستخدم و/أو تعديلات المشروع" || exit 0
          git push || true

      - name: Reply to Issue (with report)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REPLY=$(cat ai_super_responses.md)
          gh issue comment ${{ github.event.issue.number }} --body "$REPLY"
